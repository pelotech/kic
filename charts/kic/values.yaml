# Default values for kic.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/pelotech/kic
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Additional arguments for the kic container.
# These are appended to the default arguments constructed from other values.
extraArgs: []
# Example:
# extraArgs:
#   - "--custom-flag=value"

# Environment variables for the kic container
env: []
# Example:
# env:
#   - name: MY_ENV_VAR
#     value: "my_value"

# -- Controller manager specific settings
controllerManager:
  leaderElect: false
  # -- Metrics settings
  metrics:
    # -- Address to bind metrics endpoint to. Set to "0" to disable.
    bindAddress: ":8080" # Default from typical controller-runtime, can be :8443 for HTTPS
    # -- Whether to serve metrics securely (HTTPS). Requires certs if true and bindAddress is not "0".
    secure: false # Changed from true to false to match common default if certs not auto-managed by chart
  # -- Health probe settings
  health:
    # -- Address to bind health probe endpoint to.
    bindAddress: ":8081" # Default from main.go
  # -- Comma-separated list of namespaces to watch. Empty means all namespaces.
  watchedNamespaces: ""
  # -- Annotation to look for on Ingresses. Empty means all Ingresses.
  ingressAnnotation: ""
  # -- Fully qualified domain name of the ingress controller service.
  ingressControllerService: "controller.nginx.svc.cluster.local" # Default from main.go
  # -- Enable HTTP2 for metrics and webhook servers.
  enableHttp2: false

# -- Liveness probe configuration
livenessProbe:
  httpGet:
    path: /healthz
    # port: health # Will be set to the health probe port name
  initialDelaySeconds: 15
  periodSeconds: 20
  timeoutSeconds: 5
  failureThreshold: 3

# -- Readiness probe configuration
readinessProbe:
  httpGet:
    path: /readyz
    # port: health # Will be set to the health probe port name
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Service configuration.
# By default, a service is created if metrics are enabled and bindAddress is not "0".
service:
  enabled: "auto" # Can be true, false, or "auto". "auto" enables if controllerManager.metrics.bindAddress is not "0"
  type: ClusterIP
  # Port for the metrics server. Only used if service.enabled is true.
  # This should match the port part of controllerManager.metrics.bindAddress (e.g., 8080 or 8443)
  port: 8080
  # targetPort for the metrics server.
  targetPort: metrics # This will be the name of the container port for metrics
  # Annotations for the service
  annotations: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
